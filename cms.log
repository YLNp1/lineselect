ðŸš€ Starting Line Select CMS...
==================================
ðŸ”§ Starting backend server (port 5000)...

> lineselect-backend@1.0.0 dev
> nodemon server.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
Executing (default): SELECT 1+1 AS result
Database connection established successfully.
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Users';
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Vehicles';
Executing (default): PRAGMA TABLE_INFO(`Vehicles`);
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): PRAGMA INDEX_LIST(`Vehicles`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Vehicles_1`)
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): PRAGMA TABLE_INFO(`Vehicles`);
Executing (default): PRAGMA INDEX_LIST(`Vehicles`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Vehicles_1`)
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): CREATE TABLE IF NOT EXISTS `Vehicles_backup` (`id` INTEGER PRIMARY KEY, `brand` VARCHAR(255) NOT NULL, `model` VARCHAR(255) NOT NULL, `year` INTEGER NOT NULL, `price` DECIMAL(10,2) NOT NULL, `mileage` INTEGER NOT NULL, `engineType` VARCHAR(255), `power` VARCHAR(255), `transmission` VARCHAR(255), `exteriorColor` VARCHAR(255), `interiorColor` VARCHAR(255), `description` TEXT, `features` JSON DEFAULT '[]', `status` TEXT DEFAULT 'active', `slug` VARCHAR(255) UNIQUE, `featuredImage` VARCHAR(255), `view360Url` VARCHAR(255), `engineSoundUrl` VARCHAR(255), `viewCount` INTEGER DEFAULT '0', `metaTitle` VARCHAR(255), `metaDescription` TEXT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;
Unable to connect to the database: Error
    at Database.<anonymous> (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.changeColumn (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query-interface.js:43:7)
    at async Vehicle.sync (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/model.js:984:11)
    at async Sequelize.sync (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/sequelize.js:377:9)
    at async syncDatabase (/home/yln/Desktop/lineselect/lineselect-backend/src/models/index.js:26:7)
    at async startServer (/home/yln/Desktop/lineselect/lineselect-backend/server.js:90:5) {
  name: 'SequelizeUniqueConstraintError',
  errors: [
    ValidationErrorItem {
      message: 'id must be unique',
      type: 'unique violation',
      path: 'id',
      value: null,
      origin: 'DB',
      instance: null,
      validatorKey: 'not_unique',
      validatorName: null,
      validatorArgs: []
    }
  ],
  parent: [Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: Vehicles_backup.id] {
    errno: 19,
    code: 'SQLITE_CONSTRAINT',
    sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
  },
  original: [Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: Vehicles_backup.id] {
    errno: 19,
    code: 'SQLITE_CONSTRAINT',
    sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
  },
  fields: [ 'id' ],
  sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
}
Server running on port 5000
Environment: development
ðŸŽ¨ Starting admin dashboard (port 3001)...

âœ… Line Select CMS is starting!

ðŸ“Š Admin Dashboard: http://localhost:3001
ðŸ”Œ Backend API:     http://localhost:5000/api

ðŸ”‘ Login credentials:
   Email:    admin@lineselect.com
   Password: LineSelect2024!

Press Ctrl+C to stop both servers
==================================

> lineselect-admin@0.1.0 dev
> vite


  VITE v5.4.19  ready in 174 ms

  âžœ  Local:   http://localhost:3001/
  âžœ  Network: use --host to expose
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`email` = 'admin@lineselect.com' AND `User`.`isActive` = 1;
Executing (default): UPDATE `Users` SET `lastLogin`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): INSERT INTO `Media` (`id`,`vehicleId`,`type`,`filename`,`originalName`,`path`,`url`,`size`,`mimeType`,`order`,`isMain`,`thumbnailUrl`,`metadata`,`createdAt`,`updatedAt`) VALUES (NULL,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14);
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`id` = '4';
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `vehicleId` = $3 AND `type` = $4
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): UPDATE `Vehicles` SET `featuredImage`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023-1';
Executing (default): UPDATE `Vehicles` SET `slug`=$1,`featuredImage`=$2,`updatedAt`=$3 WHERE `id` = $4
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023';
Executing (default): UPDATE `Vehicles` SET `slug`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`id` = '4';
Executing (default): DELETE FROM `Media` WHERE `id` = 4
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): INSERT INTO `Media` (`id`,`vehicleId`,`type`,`filename`,`originalName`,`path`,`url`,`size`,`mimeType`,`order`,`isMain`,`thumbnailUrl`,`metadata`,`createdAt`,`updatedAt`) VALUES (NULL,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14);
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`id` = '4';
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `vehicleId` = $3 AND `type` = $4
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): UPDATE `Vehicles` SET `featuredImage`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023-1';
Executing (default): UPDATE `Vehicles` SET `slug`=$1,`featuredImage`=$2,`updatedAt`=$3 WHERE `id` = $4
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '2' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '1' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` AND `media`.`isMain` = 1 ORDER BY `Vehicle`.`createdAt` DESC;
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node server.js`[39m
Executing (default): SELECT 1+1 AS result
Database connection established successfully.
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Users';
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA TABLE_INFO(`Users`);
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): PRAGMA foreign_key_list(`Users`)
Executing (default): CREATE TABLE IF NOT EXISTS `Users_backup` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users_backup` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users`;
Executing (default): DROP TABLE `Users`;
Executing (default): CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `name` VARCHAR(255) NOT NULL, `role` TEXT DEFAULT 'admin', `lastLogin` DATETIME, `isActive` TINYINT(1) DEFAULT 1, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Users` SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users_backup`;
Executing (default): DROP TABLE `Users_backup`;
Executing (default): PRAGMA INDEX_LIST(`Users`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Users_1`)
Executing (default): SELECT name FROM sqlite_master WHERE type='table' AND name='Vehicles';
Executing (default): PRAGMA TABLE_INFO(`Vehicles`);
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): PRAGMA INDEX_LIST(`Vehicles`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Vehicles_1`)
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): PRAGMA TABLE_INFO(`Vehicles`);
Executing (default): PRAGMA INDEX_LIST(`Vehicles`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_Vehicles_1`)
Executing (default): PRAGMA foreign_key_list(`Vehicles`)
Executing (default): CREATE TABLE IF NOT EXISTS `Vehicles_backup` (`id` INTEGER PRIMARY KEY, `brand` VARCHAR(255) NOT NULL, `model` VARCHAR(255) NOT NULL, `year` INTEGER NOT NULL, `price` DECIMAL(10,2) NOT NULL, `mileage` INTEGER NOT NULL, `engineType` VARCHAR(255), `power` VARCHAR(255), `transmission` VARCHAR(255), `exteriorColor` VARCHAR(255), `interiorColor` VARCHAR(255), `description` TEXT, `features` JSON DEFAULT '[]', `status` TEXT DEFAULT 'active', `slug` VARCHAR(255) UNIQUE, `featuredImage` VARCHAR(255), `view360Url` VARCHAR(255), `engineSoundUrl` VARCHAR(255), `viewCount` INTEGER DEFAULT '0', `metaTitle` VARCHAR(255), `metaDescription` TEXT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;
Unable to connect to the database: Error
    at Database.<anonymous> (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:185:27)
    at /home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:183:50
    at new Promise (<anonymous>)
    at Query.run (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query.js:183:12)
    at /home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/sequelize.js:315:28
    at async SQLiteQueryInterface.changeColumn (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/dialects/sqlite/query-interface.js:43:7)
    at async Vehicle.sync (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/model.js:984:11)
    at async Sequelize.sync (/home/yln/Desktop/lineselect/lineselect-backend/node_modules/sequelize/lib/sequelize.js:377:9)
    at async syncDatabase (/home/yln/Desktop/lineselect/lineselect-backend/src/models/index.js:26:7)
    at async startServer (/home/yln/Desktop/lineselect/lineselect-backend/server.js:90:5) {
  name: 'SequelizeUniqueConstraintError',
  errors: [
    ValidationErrorItem {
      message: 'id must be unique',
      type: 'unique violation',
      path: 'id',
      value: null,
      origin: 'DB',
      instance: null,
      validatorKey: 'not_unique',
      validatorName: null,
      validatorArgs: []
    }
  ],
  parent: [Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: Vehicles_backup.id] {
    errno: 19,
    code: 'SQLITE_CONSTRAINT',
    sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
  },
  original: [Error: SQLITE_CONSTRAINT: UNIQUE constraint failed: Vehicles_backup.id] {
    errno: 19,
    code: 'SQLITE_CONSTRAINT',
    sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
  },
  fields: [ 'id' ],
  sql: 'INSERT INTO `Vehicles_backup` SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles`;'
}
Server running on port 5000
Environment: development
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
10:02:23 PM [vite] hmr update /src/pages/Vehicles.jsx, /src/index.css
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): INSERT INTO `Media` (`id`,`vehicleId`,`type`,`filename`,`originalName`,`path`,`url`,`size`,`mimeType`,`order`,`isMain`,`thumbnailUrl`,`metadata`,`createdAt`,`updatedAt`) VALUES (NULL,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14);
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`id` = '5';
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `vehicleId` = $3 AND `type` = $4
Executing (default): UPDATE `Media` SET `isMain`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): UPDATE `Vehicles` SET `featuredImage`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT `id`, `vehicleId`, `type`, `audioCategory`, `filename`, `originalName`, `path`, `url`, `size`, `mimeType`, `order`, `isMain`, `thumbnailUrl`, `metadata`, `createdAt`, `updatedAt` FROM `Media` AS `Media` WHERE `Media`.`vehicleId` = '3' ORDER BY `Media`.`order` ASC, `Media`.`createdAt` ASC;
Executing (default): SELECT `id`, `email`, `password`, `name`, `role`, `lastLogin`, `isActive`, `createdAt`, `updatedAt` FROM `Users` AS `User` WHERE `User`.`id` = 1 AND `User`.`isActive` = 1;
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`id` = '3';
Executing (default): SELECT `id`, `brand`, `model`, `year`, `price`, `mileage`, `engineType`, `power`, `transmission`, `exteriorColor`, `interiorColor`, `description`, `features`, `status`, `slug`, `featuredImage`, `view360Url`, `engineSoundUrl`, `viewCount`, `metaTitle`, `metaDescription`, `createdAt`, `updatedAt` FROM `Vehicles` AS `Vehicle` WHERE `Vehicle`.`slug` = 'lamborghini-huracn-2023';
Executing (default): UPDATE `Vehicles` SET `slug`=$1,`featuredImage`=$2,`updatedAt`=$3 WHERE `id` = $4
Executing (default): SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt`, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` WHERE `Vehicle`.`id` = '3';
Executing (default): UPDATE `Vehicles` SET `viewCount`=$1,`updatedAt`=$2 WHERE `id` = $3
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
Executing (default): SELECT count(`Vehicle`.`id`) AS `count` FROM `Vehicles` AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId`;
Executing (default): SELECT `Vehicle`.*, `media`.`id` AS `media.id`, `media`.`vehicleId` AS `media.vehicleId`, `media`.`type` AS `media.type`, `media`.`audioCategory` AS `media.audioCategory`, `media`.`filename` AS `media.filename`, `media`.`originalName` AS `media.originalName`, `media`.`path` AS `media.path`, `media`.`url` AS `media.url`, `media`.`size` AS `media.size`, `media`.`mimeType` AS `media.mimeType`, `media`.`order` AS `media.order`, `media`.`isMain` AS `media.isMain`, `media`.`thumbnailUrl` AS `media.thumbnailUrl`, `media`.`metadata` AS `media.metadata`, `media`.`createdAt` AS `media.createdAt`, `media`.`updatedAt` AS `media.updatedAt` FROM (SELECT `Vehicle`.`id`, `Vehicle`.`brand`, `Vehicle`.`model`, `Vehicle`.`year`, `Vehicle`.`price`, `Vehicle`.`mileage`, `Vehicle`.`engineType`, `Vehicle`.`power`, `Vehicle`.`transmission`, `Vehicle`.`exteriorColor`, `Vehicle`.`interiorColor`, `Vehicle`.`description`, `Vehicle`.`features`, `Vehicle`.`status`, `Vehicle`.`slug`, `Vehicle`.`featuredImage`, `Vehicle`.`view360Url`, `Vehicle`.`engineSoundUrl`, `Vehicle`.`viewCount`, `Vehicle`.`metaTitle`, `Vehicle`.`metaDescription`, `Vehicle`.`createdAt`, `Vehicle`.`updatedAt` FROM `Vehicles` AS `Vehicle` ORDER BY `Vehicle`.`createdAt` DESC LIMIT 0, 12) AS `Vehicle` LEFT OUTER JOIN `Media` AS `media` ON `Vehicle`.`id` = `media`.`vehicleId` ORDER BY `Vehicle`.`createdAt` DESC;
